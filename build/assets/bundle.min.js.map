{"version":3,"sources":["node_modules/browser-pack/_prelude.js","dev/scripts/index.js","dev/scripts/modules/change-section.js","dev/scripts/modules/init-cards.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","_initCards","_changeSection","start","document","querySelector","restart","querySelectorAll","addEventListener","changeSection","initCards","forEach","btn","preventDefault","sectionName","layout","classList","remove","add","sections","dataUrl","cards","card","buttons","data","totalCards","mistakes","updateCard","results","questionsCount","mistakesCount","textContent","button","removeEventListener","handleAnswer","currentData","question","answers","progress","progressValue","dataAnswers","concat","_toConsumableArray","first","Math","floor","random","second","answer","cardsLeft","currentProgress","style","width","updateContent","userAnswer","target","current","shift","correct","find","once","push","fetch","then","blob","json","content","apply","resp","catch","err","console","log","innerHTML"],"mappings":"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","file":"bundle.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\"use strict\"\n\nimport { initCards } from './modules/init-cards'\nimport { changeSection } from './modules/change-section'\n\nconst dataUrl = 'https://gist.githubusercontent.com/vergilius/6d869a7448e405cb52d782120b77b82c/raw/2ab0379eb07b2a7cd26c845b26ff5ed2a85b5064/history-flashcards.json'\nconst start = document.querySelector('.js-start')\nconst restart = document.querySelectorAll('.js-restart')\n\nstart.addEventListener('click', () => {\n  changeSection('cards')\n  initCards(dataUrl)\n})\n\nrestart.forEach(btn => {\n  btn.addEventListener('click', (e) => {\n    e.preventDefault()\n    changeSection('intro')\n  })\n})\n","const layout = document.querySelector('.layout')\nconst sections = document.querySelector('.flashcards__container')\n\nexport function changeSection(sectionName) {\n  // Change layout class\n  layout.classList.remove('layout--intro', 'layout--cards', 'layout--results')\n  layout.classList.add(`layout--${sectionName}`)\n\n  // Slide to section\n  sections.classList.remove('flashcards__container--intro', 'flashcards__container--cards', 'flashcards__container--results')\n  sections.classList.add(`flashcards__container--${sectionName}`)\n}\n","import { changeSection } from './change-section'\n\nexport function initCards(dataUrl) {\n  const cards = document.querySelector('.cards')\n  const card = cards.querySelector('.card')\n  const buttons = card.querySelectorAll('.js-card-answer')\n  const data = []\n\n  let totalCards\n  let mistakes = 0\n\n  fetch(dataUrl)\n    .then(blob => blob.json())\n    .then(content => data.push(...content))\n    .then(resp => {\n      totalCards = data.length\n      updateCard()\n    })\n    .catch(err => {\n      console.log(err)\n      cards.innerHTML = `\n        <div class=\"sg-flash\">\n          <div class=\"sg-flash__message sg-flash__message--error\">\n            <div class=\"sg-text sg-text--small sg-text--light sg-text--emphasised\">\n              Oops. Something's not right. Did you just broke it again?\n            </div>\n          </div>\n        </div>\n      `\n    })\n\n  function updateCard() {\n    if (data.length === 0) showResluts()\n    else updateContent(data[0])\n  }\n\n  buttons.forEach(button =>\n    button.addEventListener('click', handleAnswer)\n  )\n\n  function updateContent(currentData) {\n    const question = card.querySelector('.js-card-question')\n    const answers = card.querySelectorAll('.js-card-answer')\n    const progress = card.querySelector('.js-card-progressbar')\n    const progressValue = progress.querySelector('.js-card-progress-value')\n\n    // Update question\n    question.textContent = currentData.question\n\n    // Update answers\n    const dataAnswers = [...currentData.answers]\n    const first = Math.floor(Math.random() * Math.floor(2))\n    const second = first === 0 ? 1 : 0 // Yay, random order\n    answers[0].textContent = dataAnswers[first].answer\n    answers[1].textContent = dataAnswers[second].answer\n\n    // Update progress\n    const cardsLeft = data.length\n    const currentProgress = (cardsLeft / totalCards) * 100\n    progressValue.textContent = cardsLeft\n    progress.style.width = `${currentProgress}%`\n  }\n\n  function handleAnswer(e) {\n    const userAnswer = e.target.textContent\n    const current = data.shift()\n    const correct = current.answers\n      .find(answer => answer.correct).answer\n\n    if (userAnswer === correct) {\n      card.classList.add('card--correct')\n\n      card.addEventListener('animationend', () => {\n        card.classList.remove('card--correct')\n        updateCard()\n      }, { once: true })\n    }\n\n    else {\n      mistakes++\n      data.push(current)\n      card.classList.add('card--incorrect')\n\n      card.addEventListener('animationend', () => {\n        card.classList.remove('card--incorrect')\n        updateCard()\n      }, { once: true })\n    }\n  }\n\n  function showResluts() {\n    const results = document.querySelector('.js-results')\n    const questionsCount = results.querySelector('.js-question-count')\n    const mistakesCount = results.querySelector('.js-mistakes')\n\n    // Slide to results\n    changeSection('results')\n\n    // Add data\n    questionsCount.textContent = totalCards\n    mistakesCount.textContent = mistakes === 1 ?\n      `only 1 mistake!` : `${mistakes} mistakes.`\n\n    // Prevent event listeners from duplication\n    buttons.forEach(button =>\n      button.removeEventListener('click', handleAnswer)\n    )\n  }\n}\n"]}