{"version":3,"sources":["node_modules/browser-pack/_prelude.js","dev/scripts/index.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","layout","document","querySelector","sections","restart","querySelectorAll","addEventListener","classList","add","remove","cards","card","buttons","data","totalCards","mistakes","updateCard","results","questionsCount","mistakesCount","textContent","currentData","question","answers","progress","progressValue","dataAnswers","concat","_toConsumableArray","first","Math","floor","random","second","answer","cardsLeft","currentProgress","style","width","updateContent","fetch","then","blob","json","content","push","apply","resp","catch","err","console","log","innerHTML","forEach","button","userAnswer","current","shift","correct","find","once","handleAnswer","target","initCards","btn","preventDefault"],"mappings":"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","file":"bundle.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\"use strict\"\n\nconst layout = document.querySelector('.layout')\nconst sections = document.querySelector('.flashcards__container')\nconst restart = document.querySelectorAll('.js-restart')\nconst start = document.querySelector('.js-start')\n\nstart.addEventListener('click', () => {\n  // Change bg color\n  layout.classList.add('layout--cards')\n\n  // Slide to section & init\n  sections.classList.remove('flashcards__container--intro')\n  sections.classList.add('flashcards__container--cards')\n  initCards()\n})\n\nrestart.forEach(btn => {\n  btn.addEventListener('click', (e) => {\n    e.preventDefault()\n\n    // Change bg color\n    layout.classList.remove('layout--cards')\n    layout.classList.remove('layout--results')\n\n    // Slide to section\n    sections.classList.remove('flashcards__container--cards')\n    sections.classList.remove('flashcards__container--results')\n    sections.classList.add('flashcards__container--intro')\n  })\n})\n\nfunction initCards() {\n  const cards = document.querySelector('.cards')\n  const card = cards.querySelector('.card')\n  const buttons = card.querySelectorAll('.js-card-answer')\n\n  const data = []\n  const dataUrl = 'https://gist.githubusercontent.com/vergilius/6d869a7448e405cb52d782120b77b82c/raw/2ab0379eb07b2a7cd26c845b26ff5ed2a85b5064/history-flashcards.json'\n\n  let totalCards\n  let mistakes = 0\n\n  fetch(dataUrl)\n    .then(blob => blob.json())\n    .then(content => data.push(...content))\n    .then(resp => {\n      totalCards = data.length\n      updateCard()\n    })\n    .catch(err => {\n      console.log(err)\n      cards.innerHTML = `\n        <div class=\"sg-flash\">\n          <div class=\"sg-flash__message sg-flash__message--error\">\n            <div class=\"sg-text sg-text--small sg-text--light sg-text--emphasised\">\n              Oops. Something's not right. Did you just broke it again?\n            </div>\n          </div>\n        </div>\n      `\n    })\n\n  function updateContent(currentData) {\n    const question = card.querySelector('.js-card-question')\n    const answers = card.querySelectorAll('.js-card-answer')\n    const progress = card.querySelector('.js-card-progressbar')\n    const progressValue = progress.querySelector('.js-card-progress-value')\n\n    // Update question\n    question.textContent = currentData.question\n\n    // Update answers\n    const dataAnswers = [...currentData.answers]\n    const first = Math.floor(Math.random() * Math.floor(2))\n    const second = first === 0 ? 1 : 0\n    answers[0].textContent = dataAnswers[first].answer\n    answers[1].textContent = dataAnswers[second].answer\n\n    // Update progress\n    const cardsLeft = data.length\n    const currentProgress = (cardsLeft / totalCards) * 100\n    progressValue.textContent = cardsLeft\n    progress.style.width = `${currentProgress}%`\n  }\n\n  function handleAnswer(userAnswer) {\n    const current = data.shift()\n    const correct = current.answers.find(t => t.correct).answer\n\n    if (userAnswer === correct) {\n      card.classList.add('card--correct')\n\n      card.addEventListener('animationend', (e) => {\n        card.classList.remove('card--correct')\n        updateCard()\n      }, { once: true })\n\n      return\n    }\n\n    mistakes++\n    data.push(current)\n    card.classList.add('card--incorrect')\n\n    card.addEventListener('animationend', (e) => {\n      card.classList.remove('card--incorrect')\n      updateCard()\n    }, { once: true })\n  }\n\n  function showResluts() {\n    const results = sections.querySelector('.js-results')\n    const questionsCount = results.querySelector('.js-questions-count')\n    const mistakesCount = results.querySelector('.js-results-mistakes')\n\n    questionsCount.textContent = totalCards\n    mistakesCount.textContent = `${mistakes} ${mistakes != 1 ? 'mistakes' : 'mistake'}`\n\n    layout.classList.add('layout--results')\n    sections.classList.remove('flashcards__container--cards')\n    sections.classList.add('flashcards__container--results')\n  }\n\n  function updateCard() {\n    if (data.length === 0) showResluts()\n    else updateContent(data[0])\n  }\n\n  buttons.forEach(button =>\n    button.addEventListener('click', (e) => {\n      handleAnswer(e.target.textContent)\n    }\n  ), { once: true })\n}\n\n// BUG: Firefox 60.0 on GNU/Linux dosen't support { once: true } setting?\n"]}